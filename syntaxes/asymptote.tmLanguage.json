{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "scopeName": "source.asymptote",
    "name": "Asymptote",
    "foldingStartMarker": "(\\{|\\[|\\()\\s*$",
    "foldingStopMarker": "^\\s*(\\}|\\]\\))",
    "repository": {
        "const_keywords": {
            "match": "\\b(defaultfilename|braceinnerangle|camerafactor|spinner|deepred|grey|inches|realDigits|UnFill|defaultpen|arrowlength|mediumred|SSE|fuchsia|black|currentpicture|version|currentpatterns|darkgreen|W|yellow|NE|arrowhookfactor|arrow2sizelimit|NW|NoSide|arrowdir|FillDraw|SE|zerowinding|MidPoint|viewportmargin|roundcap|palegray|realMax|Move|arrowfactor|barfactor|deepgreen|lightolive|squarepen|blue|red|LeftSide|heavycyan|nan|arrowsizelimit|intMax|plain_scaling|heavyred|lightmagenta|darkcyan|SW|pi|deepyellow|purple|currentprojection|legendvskip|Aspect|magenta|darkgray|basealign|I|olive|royalblue|debugging|SuppressQuiet|chartreuse|circleprecision|labelmargin|lightcyan|Suppress|springgreen|green|heavygreen|dotfactor|heavyblue|E|palecyan|cyan|mediummagenta|defaultformat|legendhskip|EndPoint|Cyan|debuggerlines|longdashdotted|pt|darkgrey|NoAlign|Fill|lightgrey|JOIN_OUT|darkred|legendmargin|S|NNW|mediumgrey|ESE|pink|nullpath|dotframe|lightblue|defaultseparator|ENE|Draw|CCW|unitcircle|braceouterangle|ignore|legendlinelength|SSW|viewportsize|mediumgreen|beveljoin|JOIN_IN|heavygrey|deepblue|undefined|arcarrowangle|dot|deepmagenta|circlescale|longdashed|randMax|infinity|Black|Mark|Center|deepgray|realEpsilon|inch|orange|mediumblue|down|roundjoin|CW|bracedefaultratio|invert|right|deepgrey|SimpleHead|mediumgray|lightred|nullpen|invisible|realMin|gray|stdout|dashdotted|white|dashed|currentpen|solid|Allow|HookHead|arrowbarb|paleblue|mm|nobasealign|arrowangle|MarkFill|DefaultHead|VERSION|WNW|darkolive|NoFill|mediumcyan|palered|Yellow|sqrtEpsilon|diagnostics|mantissaBits|expansionfactor|palegreen|N|Label|settings|TeXHead|evenodd|Dotted|brown|identity4|palegrey|plain|file3|Align|mediumyellow|IgnoreAspect|darkmagenta|arrowtexfactor|palemagenta|bracemidangle|intMin|ocgindex|count|monoPen|left|unitsquare|WSW|inXasyMode|arcarrowfactor|paleyellow|inf|lightgreen|default|BeginPoint|shipped|legendmaxrelativewidth|nomarker|MarkPath|xformStack|squarecap|NNE|miterjoin|currentlight|plain_bounds|up|cm|darkbrown|heavygray|colorPen|Magenta|lightgray|plus|stdin|dotted|lightyellow|salmon|deepcyan|darkblue|MoveQuiet|extendcap|heavymagenta|cputimeformat|RightSide|bp)\\b",
            "name": "support.constant"
        },
        "type_keywords": {
            "match": "\\b(real|file|cputime|Label|coords2|coords3|guide|scaleT|slice|framedTransformStack|Legend|pair|bounds|position|transformation|marker|picture|projection|pairOrTriple|marginT|bool|transform|filltype|ScaleT|light|arrowhead|side|int|autoscaleT|indexedTransform|object|path|string|triple|frame|scaling|processtime|align|path3|bool3|pen|coord|hsv)\\b",
            "name": "support.class"
        },
        "operator_keywords": {
            "match": "(\\-|\\!\\=|\\<|\\/|\\||\\:\\:|\\>\\=|\\^|\\.\\.|\\%|\\=|\\*|\\<\\=|\\&|\\=\\=|\\>|\\!|\\#|\\-\\-\\-|\\-\\-|\\+)",
            "name": "keyword.operator"
        },
        "prim_type_keywords": {
            "match": "\\b(code)\\b",
            "name": "storage.type"
        }
    },
    "patterns": [
        {
            "match": "//.*$",
            "name": "comment.line.double-slash"
        },
        {
            "match": "\\b(const|static|explicit|struct|typedef)\\b",
            "name": "storage.modifier"
        },
        {
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block"
        },
        {
            "match": "\\s+\"(.*)\"",
            "name": "string.quoted.double"
        },
        {
            "begin": "(?<!\\s)\"{1}",
            "end": "\"{1}",
            "name": "string.quoted.double",
            "patterns": [
                {
                    "include": "text.tex.latex"
                }
            ]
        },
        {
            "match": "\\'.*?\\'",
            "name": "string.quoted.single"
        },
        {
            "match": "\\b(if|else|while|for|do|break|return|continue|unravel)\\b",
            "name": "keyword.control"
        },
        {
            "match": "\\b(new|cast|ecast|init)\\b",
            "name": "keyword.operator"
        },
        {
            "match": "\\b(import|include|as|access|from|operator|quote)\\b",
            "name": "keyword.other"
        },
        {
            "match": "\\b(\\d*)(\\.?)\\d+",
            "name": "constant.numeric"
        },
        {
            "match": "\\b([a-zA-Z_]\\w*)\\s*\\(",
            "captures": {
                "1": {
                    "name": "entity.name.function"
                }
            }
        },
        {
            "begin": "\\b(quote)\\s*\\{",
            "end": "\\}",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        {
            "include": "#const_keywords"
        },
        {
            "include": "#type_keywords"
        },
        {
            "include": "#operator_keywords"
        },
        {
            "include": "#prim_type_keywords"
        }
    ]
}
